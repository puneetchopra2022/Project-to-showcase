# Stage1 
FROM ubuntu AS build
RUN apt-get update && apt-get install -y golang-go
ENV GO111MODULE=off
COPY . .
RUN CGO_ENABLED=0 go build -o /app .

############################################
# HERE STARTS THE MAGIC OF MULTI STAGE BUILD
############################################

FROM scratch
# Copy the compiled binary from the build stage
COPY --from=build /app /app
# Set the entrypoint for the container to run the binary
ENTRYPOINT ["/app"]


###############################
From golang:1.22 AS build
WORKDIR /src
COPY go.mod go.mod
#download dependencies
RUN go mod download

#copy source file into image
COPY . .

#build the final executable
RUN CGO_ENABLED=0 go build -o /app  .


FROM alpine:latest
COPY --from=build /app /app

#run the application
EXPOSE 8000
CMD ["/app"]




==========

From golang:1.22 AS build
WORKDIR /src
COPY go.mod go.mod
#download dependencies
RUN go mod download

#copy source file into image
COPY . .

#build the final executable
RUN CGO_ENABLED=0 go build -o /app  .


FROM scratch
COPY --from=build /app /app

#run the application
EXPOSE 8000
CMD ["/app"]
